#YamlMime:PythonReference
api_name: []
items:
- _type: module
  children:
  - cntk.device.DeviceDescriptor
  - cntk.device.DeviceKind
  - cntk.device.all_devices
  - cntk.device.cpu
  - cntk.device.get_gpu_properties
  - cntk.device.gpu
  - cntk.device.set_default_device
  - cntk.device.set_excluded_devices
  - cntk.device.try_set_default_device
  - cntk.device.use_default_device
  fullName: cntk.device
  langs:
  - python
  module: cntk.device
  name: device
  source:
    id: device
    path: \cntk\device.py
    remote:
      branch: master
      path: \cntk\device.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 0
  type: Namespace
  uid: cntk.device
- _type: function
  fullName: cntk.device.all_devices
  langs:
  - python
  module: cntk.device
  name: all_devices
  source:
    id: all_devices
    path: \cntk\internal\swig_helper.py
    remote:
      branch: master
      path: \cntk\internal\swig_helper.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 71
  summary: Returns a device descriptor list with all the available devices
  syntax:
    content: all_devices()
    return:
      description: all device descriptors
      type:
      - DeviceDescriptor list
  type: Method
  uid: cntk.device.all_devices
- _type: function
  fullName: cntk.device.cpu
  langs:
  - python
  module: cntk.device
  name: cpu
  source:
    id: cpu
    path: \cntk\internal\swig_helper.py
    remote:
      branch: master
      path: \cntk\internal\swig_helper.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 82
  summary: Returns CPU device descriptor
  syntax:
    content: cpu()
    return:
      description: CPU device descriptor
      type:
      - DeviceDescriptor
  type: Method
  uid: cntk.device.cpu
- _type: function
  fullName: cntk.device.get_gpu_properties
  langs:
  - python
  module: cntk.device
  name: get_gpu_properties
  source:
    id: get_gpu_properties
    path: \cntk\device.py
    remote:
      branch: master
      path: \cntk\device.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 181
  summary: Retrieves and returns additional properties (total memory, number of CUDA
    cores, etc.) for the specified GPU device. This method will raise an exception
    if a CPU device is specified as an argument.
  syntax:
    content: get_gpu_properties(device)
    parameters:
    - description: a GPU device descriptor.
      id: device
  type: Method
  uid: cntk.device.get_gpu_properties
- _type: function
  fullName: cntk.device.gpu
  langs:
  - python
  module: cntk.device
  name: gpu
  source:
    id: gpu
    path: \cntk\internal\swig_helper.py
    remote:
      branch: master
      path: \cntk\internal\swig_helper.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 93
  summary: Returns GPU device descriptor
  syntax:
    content: gpu()
    return:
      description: GPU device descriptor
      type:
      - DeviceDescriptor
  type: Method
  uid: cntk.device.gpu
- _type: function
  fullName: cntk.device.set_default_device
  langs:
  - python
  module: cntk.device
  name: set_default_device
  source:
    id: set_default_device
    path: \cntk\device.py
    remote:
      branch: master
      path: \cntk\device.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 122
  summary: See `try_set_default_device()`
  syntax:
    content: set_default_device(new_default_device)
    parameters:
    - id: new_default_device
  type: Method
  uid: cntk.device.set_default_device
- _type: function
  fullName: cntk.device.set_excluded_devices
  langs:
  - python
  module: cntk.device
  name: set_excluded_devices
  source:
    id: set_excluded_devices
    path: \cntk\device.py
    remote:
      branch: master
      path: \cntk\device.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 164
  summary: Allows to specify a list of excluded devices that cannot be used as globally
    default (neither auto-selected nor explicitly specified by `try_set_default_device()`).
    For example, to avoid auto-selecting the CPU, invoke `set_excluded_devices([cpu()])`.
    However, after the default device has been selected and frozen (by a call to `use_default_device()`),
    invoking this methods has no effect, it becomes essentially a no-op.
  syntax:
    content: set_excluded_devices(excluded_devices)
    parameters:
    - description: a list of device descriptors to exclude.
      id: excluded_devices
      type:
      - list of DeviceDescriptor
  type: Method
  uid: cntk.device.set_excluded_devices
- _type: function
  fullName: cntk.device.try_set_default_device
  langs:
  - python
  module: cntk.device
  name: try_set_default_device
  source:
    id: try_set_default_device
    path: \cntk\device.py
    remote:
      branch: master
      path: \cntk\device.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 133
  summary: "Tries to set the specified device as the globally default, optionally\
    \ acquiring an exclusive (cooperative) lock on the device (only a GPU device can\
    \ be locked).\nThe default device can only be changed if it has not yet been frozen\
    \ by being implicitly used in any previous CNTK operation.\nCNTK uses a cooperative\
    \ synchronization for the device access, whereby only a single process can acquire\
    \ a device lock. However, if exclusivity is not required, the same device can\
    \ still be accessed without acquiring any locks (in which case, any existing lock\
    \ corresponding to the device will be ignored).\nReturns: *False* if\n   * the\
    \ specified device appears in the list of excluded devices;\n\n   * *acquire_device_lock*\
    \ is *True* and another process already holds a lock on the device;\n\n   * *acquire_device_lock*\
    \ is *True* and *new_default_device* corresponds to a CPU device (which cannot\
    \ be locked)."
  syntax:
    content: try_set_default_device(new_default_device, acquire_device_lock=False)
    parameters:
    - description: a descriptor of the device to be used as a globally default.
      id: new_default_device
      type:
      - DeviceDescriptor
    - defaultValue: 'False'
      description: whether or not a lock should be acquired for the specified device.
      id: acquire_device_lock
      type:
      - bool, defaults to False
  type: Method
  uid: cntk.device.try_set_default_device
- _type: function
  fullName: cntk.device.use_default_device
  langs:
  - python
  module: cntk.device
  name: use_default_device
  source:
    id: use_default_device
    path: \cntk\internal\swig_helper.py
    remote:
      branch: master
      path: \cntk\internal\swig_helper.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 104
  summary: Freezes the default device of the current CNTK process disallowing further
    changes through calls to @cntk.device.try_set_default_device. This default device
    will used for all CNTK operations where a device needs to be specified and where
    none was explicitly provided. If no device has been specified with a call to @cntk.device.try_set_default_device,
    on the first invocation, this methods will auto-select one of the available (non-locked)
    devices as the default.
  syntax:
    content: use_default_device()
    return:
      description: descriptor of the globally default device
      type:
      - DeviceDescriptor
  type: Method
  uid: cntk.device.use_default_device
references:
- fullName: cntk.device.DeviceDescriptor
  isExternal: false
  name: DeviceDescriptor
  parent: cntk.device
  uid: cntk.device.DeviceDescriptor
- fullName: cntk.device.DeviceKind
  isExternal: false
  name: DeviceKind
  parent: cntk.device
  uid: cntk.device.DeviceKind
- fullName: cntk.device.all_devices
  isExternal: false
  name: all_devices
  parent: cntk.device
  uid: cntk.device.all_devices
- fullName: cntk.device.cpu
  isExternal: false
  name: cpu
  parent: cntk.device
  uid: cntk.device.cpu
- fullName: cntk.device.get_gpu_properties
  isExternal: false
  name: get_gpu_properties
  parent: cntk.device
  uid: cntk.device.get_gpu_properties
- fullName: cntk.device.gpu
  isExternal: false
  name: gpu
  parent: cntk.device
  uid: cntk.device.gpu
- fullName: cntk.device.set_default_device
  isExternal: false
  name: set_default_device
  parent: cntk.device
  uid: cntk.device.set_default_device
- fullName: cntk.device.set_excluded_devices
  isExternal: false
  name: set_excluded_devices
  parent: cntk.device
  uid: cntk.device.set_excluded_devices
- fullName: cntk.device.try_set_default_device
  isExternal: false
  name: try_set_default_device
  parent: cntk.device
  uid: cntk.device.try_set_default_device
- fullName: cntk.device.use_default_device
  isExternal: false
  name: use_default_device
  parent: cntk.device
  uid: cntk.device.use_default_device
