#YamlMime:PythonReference
api_name: []
items:
- _type: class
  children:
  - cntk.variables.Parameter.value
  class: cntk.variables.Parameter
  fullName: cntk.variables.Parameter
  inheritance:
  - inheritance:
    - type: builtins.object
    type: cntk.variables.VariableMixin
  - inheritance:
    - type: builtins.object
    type: cntk.tensor.TensorOpsMixin
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: cntk.cntk_py.Variable
    type: cntk.cntk_py.Parameter
  langs:
  - python
  module: cntk.variables
  name: Parameter
  source:
    id: Parameter
    path: \cntk\variables.py
    remote:
      branch: master
      path: \cntk\variables.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 283
  summary: "Bases: `cntk.variables.VariableMixin`, [cntk.tensor.TensorOpsMixin](cntk.tensor.html.md#cntk.tensor.TensorOpsMixin.md),\
    \ `cntk.cntk_py.Parameter`\nA trainable parameter. It can be a scalar, vector,\
    \ matrix, or tensor of floating point numbers that can be modified by a training\
    \ procedure.\n-[ Example ]-\n>>> p = C.Parameter((13,42,7), init=C.glorot_uniform())\n\
    >>> p.shape\n    (13, 42, 7)\n>>> # example with inferred dimensions\n>>> W =\
    \ C.Parameter((C.InferredDimension, 42), init=C.glorot_uniform())\n>>> W.shape\
    \   # -1 indicates dimension yet to be inferred\n    (-1, 42)\n>>> x = C.input(13)\n\
    >>> y = C.times(x, W)  # times operation now knows that the input dimension of\
    \ W must be 13\n>>> W.shape          # hence, the shape has been updated\n   \
    \ (13, 42)\nParameters are Variables and therefore they inherit all their methods.\n"
  syntax:
    content: Parameter(self, shape=None, init=None, dtype=<cntk.default_options.default_override_or
      object at 0x000002741CDB2EB8>, device=None, name="")
    parameters:
    - description: the shape of the tensor holding the parameters
      id: shape
      type:
      - tuple
    - description: '[initializer](cntk.initializer.html.md#module-cntk.initializer.md):
        Initial value. If a numpy array is specified the shape argument is ignored
        and the tensor gets the shape of this argument. Alternatively, an initializer
        from [initializer](cntk.initializer.html.md#module-cntk.initializer.md) can
        be specified.'
      id: init
      type:
      - value (np.ndarray, list, float, int
    - description: data type of the values stored.
      id: dtype
      type:
      - np.float32 or np.float64
    - description: the device on which the values should reside.
      id: device
      type:
      - DeviceDescriptor
    - description: an optional name for this parameter
      id: name
      type:
      - str
  type: Class
  uid: cntk.variables.Parameter
- _type: attribute
  class: cntk.variables.Parameter
  fullName: cntk.variables.Parameter.value
  langs:
  - python
  module: cntk.variables
  name: value
  source:
    id: value
    path: null
    remote:
      branch: master
      path: null
      repo: https://github.com/Microsoft/CNTK.git
    startLine: null
  summary: Value of the Parameter
  syntax:
    parameters:
    - description: gets the Parameter's value as a NumPy array
      id: getter
    - description: sets the Parameter's value to the provided NumPy array
      id: setter
  type: Property
  uid: cntk.variables.Parameter.value
references:
- fullName: cntk.variables.Parameter.value
  isExternal: false
  name: value
  parent: cntk.variables.Parameter
  uid: cntk.variables.Parameter.value
