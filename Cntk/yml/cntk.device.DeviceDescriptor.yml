#YamlMime:PythonReference
api_name: []
items:
- _type: class
  children:
  - cntk.device.DeviceDescriptor.id
  - cntk.device.DeviceDescriptor.is_locked
  - cntk.device.DeviceDescriptor.type
  class: cntk.device.DeviceDescriptor
  fullName: cntk.device.DeviceDescriptor
  inheritance:
  - inheritance:
    - type: builtins.object
    type: cntk.cntk_py.DeviceDescriptor
  langs:
  - python
  module: cntk.device
  name: DeviceDescriptor
  source:
    id: DeviceDescriptor
    path: \cntk\device.py
    remote:
      branch: master
      path: \cntk\device.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 32
  summary: 'Bases: `cntk.cntk_py.DeviceDescriptor`

    Describes a device by an unique id and its type. If the device corresponds to
    a GPU its type is 1, otherwise, it is 0



    '
  syntax:
    content: DeviceDescriptor(self)
  type: Class
  uid: cntk.device.DeviceDescriptor
- _type: method
  class: cntk.device.DeviceDescriptor
  fullName: cntk.device.DeviceDescriptor.id
  langs:
  - python
  module: cntk.device
  name: id
  source:
    id: id
    path: \cntk\device.py
    remote:
      branch: master
      path: \cntk\device.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 38
  summary: Returns id of device descriptor
  syntax:
    content: id(self)
    parameters:
    - id: self
    return:
      description: id
      type:
      - int
  type: Method
  uid: cntk.device.DeviceDescriptor.id
- _type: method
  class: cntk.device.DeviceDescriptor
  fullName: cntk.device.DeviceDescriptor.is_locked
  langs:
  - python
  module: cntk.device
  name: is_locked
  source:
    id: is_locked
    path: \cntk\device.py
    remote:
      branch: master
      path: \cntk\device.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 63
  summary: Returns *True* if another CNTK process already holds an exclusive lock
    on this device.
  syntax:
    content: is_locked(self)
    parameters:
    - id: self
  type: Method
  uid: cntk.device.DeviceDescriptor.is_locked
- _type: method
  class: cntk.device.DeviceDescriptor
  fullName: cntk.device.DeviceDescriptor.type
  langs:
  - python
  module: cntk.device
  name: type
  source:
    id: type
    path: \cntk\device.py
    remote:
      branch: master
      path: \cntk\device.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 47
  summary: Returns type of device descriptor. 1 if it is a GPU device or 0 if CPU.
  syntax:
    content: type(self)
    parameters:
    - id: self
    return:
      description: type
      type:
      - int
  type: Method
  uid: cntk.device.DeviceDescriptor.type
references:
- fullName: cntk.device.DeviceDescriptor.id
  isExternal: false
  name: id
  parent: cntk.device.DeviceDescriptor
  uid: cntk.device.DeviceDescriptor.id
- fullName: cntk.device.DeviceDescriptor.is_locked
  isExternal: false
  name: is_locked
  parent: cntk.device.DeviceDescriptor
  uid: cntk.device.DeviceDescriptor.is_locked
- fullName: cntk.device.DeviceDescriptor.type
  isExternal: false
  name: type
  parent: cntk.device.DeviceDescriptor
  uid: cntk.device.DeviceDescriptor.type
